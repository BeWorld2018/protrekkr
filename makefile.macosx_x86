CXX = g++

LIBS_X86 = -lsdldraw_x86 -lz -framework CoreAudio -framework CoreMidi -framework AudioUnit -framework Cocoa -framework SDL

DEBUG = 

FLAGS_X86 = $(DEBUG) -O3 -ffast-math -fomit-frame-pointer -fno-rtti -I/Library/Frameworks/SDL.framework/Headers \
            -fno-strict-aliasing -arch i386 -wlogical-op-parentheses -D __MACOSX__ -D __GCC__ -D __MACOSX_CORE__ -D __MOT_SWAP__ -D __AIFF__

EXEOBJS_X86 = ptk_x86.o \
              editor_303_x86.o editor_pattern_x86.o editor_sequencer_x86.o editor_track_x86.o editor_track_fx_x86.o \
              patterns_blocks_x86.o editor_synth_x86.o editor_sample_x86.o editor_fx_setup_x86.o editor_setup_x86.o \
              editor_diskio_x86.o editor_reverb_x86.o editor_instrument_x86.o editor_midi_x86.o \
              samples_pack_x86.o files_list_x86.o files_x86.o mods_x86.o patterns_x86.o reverbs_x86.o midi_cfg_x86.o \
              bits_x86.o pack_x86.o tinypack_x86.o words_x86.o wputils_x86.o \
              config_x86.o 303s_x86.o synths_x86.o insts_x86.o ptps_x86.o \
              midi_x86.o RtMidi_x86.o midi_dispatch_x86.o \
              timer_x86.o main_x86.o sdlmain_x86.o \
              misc_draw_x86.o draw_primitives_x86.o requesters_x86.o \
              samples_ops_x86.o aiff_x86.o riff_x86.o \
              spline_x86.o tb_303_x86.o wavpack_x86.o samples_unpack_x86.o replay_x86.o synth_x86.o endianness_x86.o \
              sounddriver_macosx_x86.o

all: protrekkr

clean: RemObj

RemObj:
	-rm -f $(EXEOBJS_X86)

protrekkr: $(EXEOBJS_X86)
	(cd src/extralibs/sdl_draw; make -f makefile.macosx)
	(cd src/extralibs/zlib-1.2.3; make -f makefile.macosx)
	$(CXX) -isysroot /Developer/SDKs/MacOSX10.4u.sdk -o ./release/distrib/protrekkr.app/Contents/MacOS/Protrekkr \
           -L./ --L/library/frameworks -Lsrc/extralibs/sdl_draw -Lsrc/extralibs/zlib-1.2.3 $(FLAGS_X86) $(EXEOBJS_X86) $(LIBS_X86)
	strip -x -X -S ./release/distrib/protrekkr.app/Contents/MacOS/Protrekkr
	chmod +x ./release/distrib/protrekkr.app/Contents/MacOS/Protrekkr

ptk_x86.o: src/ptk.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_303_x86.o: src/editors/editor_303.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_pattern_x86.o: src/editors/editor_pattern.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_sequencer_x86.o: src/editors/editor_sequencer.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_track_x86.o: src/editors/editor_track.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_track_fx_x86.o: src/editors/editor_track_fx.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

patterns_blocks_x86.o: src/editors/patterns_blocks.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_synth_x86.o: src/editors/editor_synth.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_sample_x86.o: src/editors/editor_sample.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_fx_setup_x86.o: src/editors/editor_fx_setup.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_setup_x86.o: src/editors/editor_setup.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_diskio_x86.o: src/editors/editor_diskio.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_reverb_x86.o: src/editors/editor_reverb.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_instrument_x86.o: src/editors/editor_instrument.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

editor_midi_x86.o: src/editors/editor_midi.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

samples_pack_x86.o: src/samples/samples_pack.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

files_list_x86.o: src/files/files_list.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

files_x86.o: src/files/files.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

mods_x86.o: src/files/mods.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

patterns_x86.o: src/files/patterns.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

reverbs_x86.o: src/files/reverbs.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

midi_cfg_x86.o: src/files/midi_cfg.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

config_x86.o: src/files/config.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

303s_x86.o: src/files/303s.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

synths_x86.o: src/files/synths.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

insts_x86.o: src/files/insts.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

ptps_x86.o: src/files/ptps.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

midi_x86.o: src/midi/midi.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

RtMidi_x86.o: src/midi/RtMidi.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

midi_dispatch_x86.o: src/midi/midi_dispatch.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

timer_x86.o: src/support/timer.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

main_x86.o: src/support/main.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

sdlmain_x86.o: src/support/sdlmain.m
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

misc_draw_x86.o: src/ui/misc_draw.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

draw_primitives_x86.o: src/ui/draw_primitives.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

requesters_x86.o: src/ui/requesters.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

samples_ops_x86.o: src/samples/samples_ops.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

aiff_x86.o: src/samples/aiff/aiff.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

riff_x86.o: src/samples/wav/riff.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

spline_x86.o: release/distrib/replay/lib/spline.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

tb_303_x86.o: release/distrib/replay/lib/tb_303.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

wavpack_x86.o: release/distrib/replay/lib/wavpack.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

samples_unpack_x86.o: release/distrib/replay/lib/samples_unpack.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

replay_x86.o: release/distrib/replay/lib/replay.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

synth_x86.o: release/distrib/replay/lib/synth.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

endianness_x86.o: release/distrib/replay/lib/endianness.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

sounddriver_macosx_x86.o: release/distrib/replay/lib/sounddriver/sounddriver_macosx.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

bits_x86.o: src/samples/wavpack/bits.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

pack_x86.o: src/samples/wavpack/pack.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

words_x86.o: src/samples/wavpack/words.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

wputils_x86.o: src/samples/wavpack/wputils.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<

tinypack_x86.o: src/samples/wavpack/tinypack.cpp
	$(CXX) -c -o $(@) $(FLAGS_X86) $<
